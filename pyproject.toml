[project]
name = "interrogatio"
version = "0.0.0"
description = "Prompting library for terminals."
authors = [
    {name = "Francesco Faraone"},
]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.12,<4"

dependencies = [
    "validators>=0.18.2,<0.19.0",
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries",
]

[project.urls]
homepage = "https://github.com/ffaraone/interrogatio"
documentation = "https://interrogatio.readthedocs.io/en/latest/"
repository = "https://github.com/ffaraone/interrogatio.git"

[tool.uv]
dev-dependencies = [
    "ipython>=8,<9",
    "pytest>=8,<9",
    "pytest-cov>=6,<7",
    "pytest-mock>=3,<4",
    "pytest-deadfixtures>=2.2,<3",
    "ruff>=0.3,<1",
    "bandit>=1.8.0,<2",
    "pre-commit>=4.0.1,<5",
]

[tool.pytest.ini_options]
testpaths = "tests"
log_cli = true
addopts = "--cov=interrogatio --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"

[tool.coverage.run]
branch = true
relative_files = true

[tool.coverage.report]
omit = [
    "interrogatio/main.py",
    "*/__init__.py",
]

exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]


[tool.ruff]
extend-exclude = [".vscode", ".devcontainer"]
output-format = "full"

[tool.ruff.lint]

select = [
    "E",  # w errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade,
    "PT",  # flake8-pytest-style
    "T10",  # flake8-pytest-style
]
ignore = [
    "PT004", # fixture '{name}' does not return anything, add leading underscore
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
]

[tool.ruff.lint.pycodestyle]
max-line-length = 100